###cargando las librerias
pacman::p_load(tidyverse, lubridate, quantmod, tseries, xts, zoo, reshape, car,
               astsa, foreign, timsac,vars,lmtest, mFilter, dynlm,nlme,broom,
               kableExtra,knitr, MASS, parallel, forecast, knitr)
##Cargando los datos-- dividendos
data <- read.delim("clipboard")
dividendos_ts<-ts(data$DIVIDENDOS, start = c(1970), frequency = 4)
dividendos_df<-data.frame(fecha=time(dividendos_ts), dividendos_ts=dividendos_ts)
##graficando la serie
dividendos_df %>%
  ggplot(aes(x=fecha, y=dividendos_ts))+
  geom_line(size = 1.3)+
  theme_minimal()+
  labs(title="Dividendos",
       subtitle="ESTADOS UNIDOS 1970-I A 1991 - IV",
       caption="Elaboración propia")

####Descomponiendo la serie 

div_com<-data.frame(fecha=time(dividendos_ts),
                    dividendos_ts=dividendos_ts,
                    estacionalidad=decompose(dividendos_ts)$seasonal,
                    tendencia=decompose(dividendos_ts)$trend,
                    error=decompose(dividendos_ts)$random)
div_com %>%
  gather("id_var","valores", -fecha) %>%
  ggplot(aes(x=fecha, y=valores))+
  geom_line(aes(color=id_var), size =1.3)+
  facet_wrap(.~id_var, scales = "free_y")+
  theme_minimal()+xlab("")+ylab("")+
  labs(title="Descomposición de la serie Dividendos",
       caption = "Elaboración propia")

###  comprobando la estacionariedad de la serie
library(urca)
adf.test(dividendos_ts)
ADF<-ur.df(y=dividendos_ts,
           type="none",
           lags =1,
           selectlags = c("AIC"))
summary(ADF)
###VIsualizando las primeras diferencias
dividendos_dif<-diff(dividendos_ts)
dividendos_d<-data.frame(fecha=time(dividendos_dif), dividendos_dif=dividendos_dif)
dividendos_d %>%
  ggplot(aes(x=fecha, y=dividendos_dif))+
  geom_line(size = 1)+
  theme_minimal()+
  labs(title="Primera diferenciación",
       caption="Elaboración propia")
adf.test(dividendos_dif)
ADF1<-ur.df(y=dividendos_dif,
            type="none",
            lags = 1,
            selectlags = c("AIC"))
summary(ADF1)


#### Identificación del modelo.
install.packages("TSA")
library(TSA)
eacf(dividendos_ts)
### Estimación de modelos
library(forecast)
library(lmtest)
ar1ma0<-stats::arima(dividendos_ts, order = c(1,0,0))
ar2ma0<-stats::arima(dividendos_ts, order = c(2,0,0))
ar0ma1<-stats::arima(dividendos_ts, order = c(0,0,1))
ar0ma2<-stats::arima(dividendos_ts, order = c(0,0,2))
ar1ma1<-stats::arima(dividendos_ts, order = c(1,0,1))
ar2ma1<-stats::arima(dividendos_ts, order = c(2,0,1))
ar1ma2<-stats::arima(dividendos_ts, order = c(1,0,2))
ar2ma2<-stats::arima(dividendos_ts, order = c(2,0,2))

### Especificación de los modelos planteados
install.packages("Metrics")
library(Metrics)
summary(ar1ma0)
AIC<-c(ar1ma0$aic,ar2ma0$aic, ar0ma1$aic,
       ar0ma2$aic, ar1ma1$aic, ar2ma1$aic, ar1ma2$aic, ar2ma2$aic)
Modelos<-c("ar1ma0","ar2ma0", "ar0ma1",
           "ar0ma2", "ar1ma1", "ar2ma1", "ar1ma2", "ar2ma2")
###ELección del mejor modelo de acuerdo al criterio de Akaike AIC

Tabla_AICs<<-cbind(AIC, Modelos)
print(Tabla_AICs)
## ###  Elección del modelo de acuerdo al RMSe criterio
RMSE_ar2ma0<-rmse(dividendos_ts, fitted.values(ar2ma0))
RMSE_ar1ma2<-rmse(dividendos_ts, fitted.values(ar1ma2))
RMSE<-c(RMSE_ar2ma0, RMSE_ar1ma2)
Modelos_e<- c("ar2ma0", "ar1ma2")
RMSE_R<-cbind(RMSE, Modelos_e)
print(RMSE_R)

#### Una vez se ha elegido el mejor modelo, conviene hacer la prueba de autocorrelación 

res <- ar1ma2$residuals
log(87) #Nùmero de lags para Ljung = 4
Box.test(res, lag = 4, type="Box-Pierce")
Box.test(res, lag = 4, type = "Ljung-Box")   ###SE observa que los errores del modelo no están autocorrelacionados

###pronostico 
fcast<-forecast(ar1ma2, h=4, level = 95)
autoplot(fcast, include=100)
